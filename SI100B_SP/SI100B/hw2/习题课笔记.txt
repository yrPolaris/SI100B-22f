数据图像：
灰度
黑白，亮度函数，形成灰度图像，最高255（8bit）最亮，从0开始（读入图片以8bit的u-int格式）
可以用x,y表示，
x,y是空间坐标
x,y是离散的

彩色
人眼对三种颜色感知最明显，红绿蓝三种颜色叠加形成彩色图片
f（x,y,c）
c：rgb三个通道

第一题第一小问：白平衡
根据原图像rgb参数计算i（x,y）
根据rgbi计算新的rgb通道的系数（应该占有通道的比例）

第二小问：HSI空间
RGB空间分别控制三种颜色的亮度，HSI空间：H色调，S饱和度，I亮度
需要考虑处理分子分母为0的情况
转换成double形式int2double

第三小问：去马赛克
滤波：每个像素上只留下一个颜色信息
补全：周围平均补齐法（绿色）
	先列上下补齐，再行左右补齐（红蓝）
	最上面没有上下两行或者两列进行补齐，那就直接复制最近一行或者一列的像素数值
	数据格式bggr
imread一个图片，一般式uint8数据格式
最好直接用double格式转换数据格式（他不是更改图片类型，只是255变成255.0000）
im2double图片范围才会从0，255变成0，1

第二题第一小问：
空间噪声： 比喻：蛋糕坑：三层蛋糕上的小蜡烛
空间滤波器：
线性滤波：线性平均和加权平均（等同重要和位置重要性）
中值滤波：根据亮度排序，选择中间值赋给中间像素（非线性滤波器）
imnoise（输入的图像，想添加的）（该函数要求double，题目是uint）（跟下面两个一起用）
fspecial可以兴建一个mask
imfilter和medfilt2

第三题，第一小问：
直方图
统计像素亮度出现的数量或者概率而损失了每个亮度像素的位置信息
（两张图片可能直方图是一样的）
归一化直方图：某个亮度像素数量除以总共的亮度像素数量（列坐标为频率而不是频数）
如果两个直方图叠加没有相交部分，那么叠加图片等于两个直方图相加

第二小问：
log变换（double以0，1为范围那么更方便一点）
gamma变换

bonus
